# Nombre del flujo de trabajo
name: Deploy to GitHub Pages

# Se ejecuta cada vez que haces un push a la rama 'main'
on:
  push:
    branches: ["main"]

# Permisos necesarios para que la acción pueda desplegar a GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Define un control de concurrencia para evitar despliegues simultáneos
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Trabajo de construcción: prepara los archivos del sitio
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Descarga el código de tu repositorio
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Crea el archivo firebase-config.js a partir del secreto
      - name: Create Firebase Config File
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG_JS }}
        run: echo "$FIREBASE_CONFIG" > firebase-config.js

      # 3. Configura GitHub Pages para el despliegue
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 4. Sube los archivos del sitio como un "artefacto" para el trabajo de despliegue
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Sube el directorio raíz completo
          path: '.'

  # Trabajo de despliegue: toma el artefacto y lo publica
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    # Este trabajo necesita que el trabajo 'build' termine primero
    needs: build
    steps:
      # 1. Despliega el artefacto a GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
